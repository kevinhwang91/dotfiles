# require: tmux version 3.3 or later

# cat << EOF > /dev/null
# My alacritty has changed the keys bindings:
# Map Control-([1-9]|[0;']) to Control-[F1-F12] (F25-F36)
# Map Control-Alt-([1-9]) and Control-[,.] to Control-Shift-[F1-F12] (F37-F48)
# Map Control-[ and Control-m to Alt-Shift-[F1-F2] (F61-F62)

# -- general server options
set -s default-terminal 'tmux-256color'
set -sa terminal-overrides 'xterm-256color:RGB'
set -sa terminal-overrides 'alacritty:RGB'
set -s escape-time 10
set -s focus-events on
set -s exit-empty off
set -s buffer-limit 200
set -s set-clipboard on
set -s copy-command 'xsel -i -b'
# set -s copy-command 'xclip -i -selection clipboard >/dev/null'

# -- misc options
set -g word-separators ' =+!@#$%^&*,.<>/?;:\\|~`(){}[]"'
set -g mouse on
set -g history-limit 10000
set -g editor nvim
set -g repeat-time 300
set -g wrap-search off
set -g visual-activity off
set -wg monitor-activity off
set -wg monitor-bell off

if '[[ -x ~/.local/bin/fzf-panes.tmux ]]' {
    set -g '@fzf_panes_ex_session_pat' '^(floating)$'
    set-hook -g pane-focus-in[10] "if -F \
        '#{&&:#{!=:#{client_key_table},resize},#{!=:#{session_name},floating}}' \
        'run -b \"~/.local/bin/fzf-panes.tmux update_mru_pane_ids\"'"
    bind w run -b '~/.local/bin/fzf-panes.tmux new_window'
    bind \; run -b '~/.local/bin/fzf-panes.tmux select_last_pane'
} {
    set-hook -ug pane-focus-in[10]
    bind w choose-tree -Z
    bind S choose-tree 'move-pane -v -s "%%"'
    bind V choose-tree 'move-pane -h -s "%%"'
}

# reload configuration
bind C-r source ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
SESSION_MANAGER PATH \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
FZF_DEFAULT_OPTS \
'
set-hook -g client-attached 'run -b "cut -c3- ~/.config/tmux/tmux.conf | sed /word-separators/d | bash -s update_env_event"'

# -- prefix
unbind C-b
set -g prefix 'C-\'
bind 'C-\' send 'C-\'

set -g prefix2 C-F11
bind C-F11 send C-F11

# -- display
set -g base-index 1
set -wg pane-base-index 1

set -wg automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 10

# -- navigation

# create session
bind C-c new

# window navigation
bind -r C-p if -F '#{>:#{session_windows},1}' \
'previous-window' 'neww  -c "#{pane_current_path}"'
bind -r C-n if -F '#{>:#{session_windows},1}' \
'next-window' 'neww -c "#{pane_current_path}"'

# pane navigation
bind 1 selectp -t:.1
bind 2 selectp -t:.2
bind 3 selectp -t:.3
bind 4 selectp -t:.4
bind 5 selectp -t:.5
bind 6 selectp -t:.6
bind 7 selectp -t:.7
bind 8 selectp -t:.8
bind 9 selectp -t:.9
bind 0 selectp -t:.10
bind h selectp -L
bind j selectp -D
bind k selectp -U
bind l selectp -R
bind < swapp -U
bind > swapp -D
bind | swapp

# pane resizing
bind -T resize C-Space resizep -Z
bind -T resize Space nextl \; switchc -T resize
bind -T resize 1 selectp -t :.1 \; switchc -T resize
bind -T resize 2 selectp -t :.2 \; switchc -T resize
bind -T resize 3 selectp -t :.3 \; switchc -T resize
bind -T resize 4 selectp -t :.4 \; switchc -T resize
bind -T resize 5 selectp -t :.5 \; switchc -T resize
bind -T resize 6 selectp -t :.6 \; switchc -T resize
bind -T resize 7 selectp -t :.7 \; switchc -T resize
bind -T resize 8 selectp -t :.8 \; switchc -T resize
bind -T resize 9 selectp -t :.9 \; switchc -T resize
bind -T resize 0 selectp -t :.10 \; switchc -T resize
bind -T resize C-h selectp -L \; switchc -T resize
bind -T resize C-j selectp -D \; switchc -T resize
bind -T resize C-k selectp -U \; switchc -T resize
bind -T resize C-l selectp -R \; switchc -T resize
bind -T resize \; lastp \; switchc -T resize
bind -T resize < swapp -U \; switchc -T resize
bind -T resize > swapp -D \; switchc -T resize
bind -T resize h resizep -L 2 \; switchc -T resize
bind -T resize j resizep -D 2 \; switchc -T resize
bind -T resize k resizep -U 2 \; switchc -T resize
bind -T resize l resizep -R 2 \; switchc -T resize
bind -T resize M-1 selectl even-horizontal \; switchc -T resize
bind -T resize M-2 selectl even-vertical \; switchc -T resize
bind -T resize M-3 selectl main-horizontal \; switchc -T resize
bind -T resize M-4 selectl main-vertical \; switchc -T resize
bind -T resize M-5 selectl tiled \; switchc -T resize
bind -n C-S-F11 resizep -Z
bind C-S-F11 send C-S-F11
bind -n C-S-F12 switchc -T resize
bind . switchc -T resize

# floating window
bind M-f if -F '#{==:#S,floating}' {
    detach
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -xC -yC -w80% -h60% -E 'tmux new -A -s floating \
    "tmux set -w pane-border-status off; TMUX_SESSION=floating $SHELL"'
}
bind -n M-S-F2 if -F '#{==:#S,floating}' {
    detach
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -xC -yC -w80% -h60% -E 'tmux new -A -s floating \
    "tmux set -w pane-border-status off; TMUX_SESSION=floating $SHELL"'
}

bind s if -F '#{!=:#S,floating}' {
    splitw -v -c '#{pane_current_path}'
} {
    set -uw pane-border-status
    run '~/.local/bin/fzf-panes.tmux update_mru_pane_ids'
    run 'bash -c "tmux joinp -v -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

bind v if -F '#{!=:#S,floating}' {
    splitw -h -c '#{pane_current_path}'
} {
    set -uw pane-border-status
    run '~/.local/bin/fzf-panes.tmux update_mru_pane_ids'
    run 'bash -c "tmux joinp -h -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

bind ! if -F '#{!=:#S,floating}' {
    breakp
} {
    set -uw pane-border-status
    run '~/.local/bin/fzf-panes.tmux update_mru_pane_ids'
    run 'bash -c "tmux breakp -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

bind @ if -F '#{!=:#S,floating}' {
    breakp -d
} {
    set -uw pane-border-status
    run '~/.local/bin/fzf-panes.tmux update_mru_pane_ids'
    run 'bash -c "tmux breakp -d -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# vi mode
set -g status-keys emacs
set -g mode-keys vi
bind Enter copy-mode
bind -n C-F12 copy-mode
bind C-F12 send C-F12

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi i send -X select-word
bind -T copy-mode-vi y send -X copy-pipe-and-cancel
bind -T copy-mode-vi * if -F '#{selection_active}' {
    send -X copy-pipe
    send -FX search-forward-text '#{buffer_sample}'
} {
    send -FX search-forward '#{copy_cursor_word}'
}
bind -T copy-mode-vi \# if -F '#{selection_active}' {
    send -X copy-pipe
    send -FX search-backward-text '#{buffer_sample}'
    send -X search-again
} {
    send -FX search-backward '#{copy_cursor_word}'
}

bind -T copy-mode-vi u send -X halfpage-up
bind -T copy-mode-vi d send -X halfpage-down

# -- clipboard
bind -T copy-mode-vi Enter send -X copy-pipe

bind b lsb
bind p pasteb

# -- toggle_syn_input
bind C-g if -F '#{pane_synchronized}' \
'set -w synchronize-panes off' 'set -w synchronize-panes on'

# -- statusbar
set -g status off
bind C-s if -F '#{==:#{status},on}' 'set status off' 'set status on'

# -- fzf_url
bind u run -b 'cut -c3- ~/.config/tmux/tmux.conf | bash -s fzf_url'

# -- theme
# panes
set -wg pane-border-status top
set -wg pane-border-format '#[align=right] #{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{pane_current_command}  #{pane_tty} #{?pane_active,❐ #S:#I/#{session_windows} ,}\
#{?window_zoomed_flag,⬢,❄} #P '

set -wg pane-active-border-style '#{?pane_in_mode,fg=yellow,\
#{?synchronize-panes,fg=brightcyan#,bold,#{?#{==:#{client_key_table},resize},fg=white,fg=blue#,bold}}}'
set -wg pane-border-style fg=magenta
set -wg pane-border-lines heavy
set -wg copy-mode-mark-style fg=black,bg=white,underscore
set -wg copy-mode-match-style fg=black,bg=brightyellow
set -wg copy-mode-current-match-style fg=black,bg=yellow,underscore

# 3.4 version later
if -F '#{m/r:3\.[4-9]$,#{version}}' {
    set -wg popup-border-lines rounded
    set -wg popup-border-style fg=cyan
}

# windows
set -g status-justify 'centre'
set -g status-left-length '80'
set -g status-right-length '80'
set -wg window-status-separator ''

# statusbar
set -g status-bg black
set -g status-left ' #[fg=magenta]❐ #S'
set -g status-right '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta] %Y-%m-%d %H:%M '
set -wg window-status-format '#[fg=magenta] #I #W '
set -wg window-status-current-format '#[fg=brightblue,bold] #I #W:#F'
set -wg window-status-activity-style bg=black
set -wg window-status-bell-style bg=black

# EOF
# fzf_url() {
#     local ip4_seg="(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"
#     local path_set="[-a-zA-Z0-9@:%_\+\.~#?&//=]"
#     local url_re="(https?|ftp|file)://($path_set+|(($ip4_seg\.){3,3}$ip4_seg$path_set*))"
#     local -a url=($(tmux capture-pane -S - -Jp | grep -oE "$url_re"))
#     if [[ -z $url ]]; then
#         return 0
#     else
#         printf "%s\n" ${url[@]} |
#             sort -u |
#             nl -w3 -s '  ' |
#             fzfp --height=60% --multi --exit-0 --cycle --reverse |
#             awk '{print $2}' |
#             xargs -I {} xdg-open {} &> /dev/null
#     fi
# }
#
# update_env_event() {
#     local event='client-attached'
#     local event_dir=${TMUX%%,*}-event
#     mkdir -p $event_dir 2>/dev/null
#     rm $event_dir/$event-pane* 2>/dev/null
#     tmux list-panes -a -F '#D' | sed -E "s|^(.*)$|$event_dir/$event-pane-\1|g" | xargs touch
# }
#
# "$@"
