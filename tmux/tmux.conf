# cat << EOF > /dev/null
# My alacritty has changed the keys bindings:
# Map Control-([1-9]|[0;']) to Control-[F1-F12] (F25-F36)
# Map Control-Alt-([1-9]) and Control-[,.] to Control-shift-[F1-F12] (F37-F48)

# -- general server options
set -s default-terminal 'tmux-256color'
set -sa terminal-overrides 'xterm-256color:RGB'
set -sa terminal-overrides 'alacritty:RGB'
set -s escape-time 10
set -s focus-events on
set -s exit-empty off
set -s buffer-limit 200
set -s set-clipboard on
set -s copy-command 'xsel -i -b'
# set -s copy-command 'xclip -i -selection clipboard >/dev/null'

# -- misc options
set -g word-separators " =+!@#$%^&*,.<>/?;:\\|~`(){}[]\"'"
set -g mouse on
set -g history-limit 10000
set -g editor nvim
set -g repeat-time 300
set -g visual-activity off
set -wg monitor-activity off
set -wg monitor-bell off

if-shell '[[ -f ~/.local/bin/fzf-panes.tmux ]]' {
    set-hook -g pane-focus-in[10] "run -b 'bash ~/.local/bin/fzf-panes.tmux update_mru_pane_ids'"
    bind w run -b 'bash ~/.local/bin/fzf-panes.tmux new_window'
    bind \; run -b 'bash ~/.local/bin/fzf-panes.tmux select_last_pane'
} {
    set-hook -ug pane-focus-in[10]
    bind w choose-tree -Z
    bind S choose-tree 'move-pane -v -s "%%"'
    bind V choose-tree 'move-pane -h -s "%%"'
}

# reload configuration
bind C-r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
SESSION_MANAGER PATH \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
FZF_DEFAULT_OPTS \
'
set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | bash -s update_env_event"'

# -- prefix
unbind C-b
set -g prefix 'C-\'
bind 'C-\' send-keys 'C-\'

set -g prefix2 C-F11
bind C-F11 send-keys C-F11

# -- display
set -g base-index 1
set -wg pane-base-index 1

set -wg automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 10

# -- navigation

# create session
bind C-c new-session

# window navigation
bind -r C-p if-shell -F '#{>:#{session_windows},1}' 'previous-window' 'new-window'
bind -r C-n if-shell -F '#{>:#{session_windows},1}' 'next-window' 'new-window'

bind s split-window -v
bind v split-window -h

# pane navigation
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9
bind 0 select-pane -t:.10
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind > swap-pane -D
bind < swap-pane -U
bind | swap-pane

# pane resizing
bind -n C-S-F11 resize-pane -Z
bind C-S-F11 send-keys C-S-F11
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# vi mode
set -g wrap-search off
set -g status-keys emacs
set -g mode-keys vi
bind Enter copy-mode
bind -n C-F12 copy-mode
bind C-F12 send-keys C-F12

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi i send-keys -X select-word
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi * if-shell -F '#{selection_active}' {
    send-keys -X copy-pipe
    send-keys -FX search-forward-text '#{buffer_sample}'
} {
    send-keys -FX search-forward '#{copy_cursor_word}'
}
bind -T copy-mode-vi \# if-shell -F '#{selection_active}' {
    send-keys -X copy-pipe
    send-keys -FX search-backward-text '#{buffer_sample}'
    send-keys -X search-again
} {
    send-keys -FX search-backward '#{copy_cursor_word}'
}

bind -T copy-mode-vi u send-keys -X halfpage-up
bind -T copy-mode-vi d send-keys -X halfpage-down

# -- clipboard
bind -T copy-mode-vi Enter send-keys -X copy-pipe

bind b list-buffers
bind p paste-buffer

# -- toggle_syn_input
bind C-g if-shell -F '#{pane_synchronized}' \
'set -w synchronize-panes off' 'set -w synchronize-panes on'

# -- statusbar
set -g status off
bind C-s if-shell -F '#{==:#{status},on}' 'set status off' 'set status on'

# -- fzf_url
bind u run -b 'cut -c3- ~/.tmux.conf | bash -s fzf_url'

# -- osc52 send
if-shell '[[ -f ~/.local/bin/osc52send ]]' {
    bind M-y run -b 'tmux save-buffer - | ~/.local/bin/osc52send'
}

# -- theme
# panes
set -wg pane-border-status top
set -wg pane-border-format '#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ \
#{pane_tty} #{pane_current_command}'

set -wg pane-active-border-style '#{?pane_in_mode,fg=yellow,bold,\
#{?synchronize-panes,fg=red,bold,fg=blue,bold}}'
set -wg pane-border-style fg=magenta
set -wg pane-border-lines heavy
set -wg copy-mode-mark-style fg=black,bg=white,underscore
set -wg copy-mode-match-style fg=black,bg=brightyellow
set -wg copy-mode-current-match-style fg=black,bg=brightyellow

# windows
set -g status-justify 'centre'
set -g status-left-length '80'
set -g status-right-length '80'
set -wg window-status-separator ''

# statusbar
set -g status-bg black
set -g status-left ' #[fg=magenta]❐ #S'
set -g status-right '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta] %Y-%m-%d %H:%M '
set -wg window-status-format '#[fg=magenta] #I #W '
set -wg window-status-current-format '#[fg=brightblue,bold] #I #W:#F'
set -wg window-status-activity-style bg=black
set -wg window-status-bell-style bg=black

# EOF
# fzf_url() {
#     local ip4_seg="(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"
#     local path_set="[-a-zA-Z0-9@:%_\+\.~#?&//=]"
#     local url_re="(https?|ftp|file)://($path_set+|(($ip4_seg\.){3,3}$ip4_seg$path_set*))"
#     local -a url=($(tmux capture-pane -S - -Jp | grep -oE "$url_re"))
#     if [[ -z $url ]]; then
#         return 0
#     else
#         printf "%s\n" ${url[@]} |
#             sort -u |
#             nl -w3 -s '  ' |
#             fzfp --height=60% --multi --exit-0 --cycle --reverse |
#             awk '{print $2}' |
#             xargs -I {} xdg-open {} &> /dev/null
#     fi
# }
#
# update_env_event() {
#     local event='client-attached'
#     local event_dir=${TMUX%%,*}-event
#     mkdir -p $event_dir 2>/dev/null
#     rm $event_dir/$event-pane* 2>/dev/null
#     tmux list-panes -a -F '#D' | sed -E "s|^(.*)$|$event_dir/$event-pane-\1|g" | xargs touch
# }
#
# "$@"
