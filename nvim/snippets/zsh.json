{
	"#!/usr/bin/env zsh": {
		"prefix": "env",
		"body": [
			"#!/usr/bin/env zsh",
			"$0"
		],
		"description": "Adds shebang line for zsh."
	},
	"assigment": {
		"prefix": "ll",
		"body": [
			"local ${1:varName}=${2:value}"
		],
		"description": "create a variable"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if [[ ${1:condition} ]]; then",
			"\t$0",
			"fi"
		],
		"description": "An if statement."
	},
	"if(": {
		"prefix": "if(",
		"body": [
			"if (( ${1:condition} )); then",
			"\t$0",
			"fi"
		],
		"description": "An if statement with (( ))."
	},
	"else": {
		"prefix": "else",
		"body": [
			"else",
			"\t$0"
		],
		"description": "An else statement."
	},
	"elif": {
		"prefix": [
			"elif",
			"elseif"
		],
		"body": [
			"elif [[ ${1:condition} ]]; then",
			"\t$0"
		],
		"description": "An elseif statement."
	},
	"elif(": {
		"prefix": [
			"elif(",
			"elseif("
		],
		"body": [
			"elif (( ${1:condition} )); then",
			"\t$0"
		],
		"description": "An elseif statement  with(( ))."
	},
	"for": {
		"prefix": "for",
		"body": [
			"for (( ${1:i} = 1; $1 <= ${2:length}; $1++)); do",
			"\t$0",
			"done"
		],
		"description": "An index-based iteration for loop."
	},
	"fori": {
		"prefix": "fori",
		"body": [
			"for ${1:var} in $${2:list}; do",
			"\t$0",
			"done"
		],
		"description": "for loop in list"
	},
	"while": {
		"prefix": "whi",
		"body": [
			"while [[ ${1:condition} ]]; do",
			"\t$0",
			"done"
		],
		"description": "while loop"
	},
	"while(": {
		"prefix": "while(",
		"body": [
			"while (( ${1:condition} )); do",
			"\t$0",
			"done"
		],
		"description": "while loop with (( ))"
	},
	"typeset": {
		"prefix": "type",
		"body": [
			"typeset -A $0"
		],
		"description": "typeset -A statement"
	},
	"function": {
		"prefix": "fun",
		"body": [
			"${1:funname}() {",
			"\t$0",
			"}"
		],
		"description": "Create an function"
	},
	"echo": {
		"prefix": "echo",
		"body": [
			"echo $0"
		],
		"description": "echo command"
	},
	"print": {
		"prefix": "print",
		"body": [
			"print $0"
		],
		"description": "print command"
	}
}
