{
	"require": {
		"prefix": "req",
		"body": ["require('${1:module}')"],
		"description": "Require module"
	},
	"return": {
		"prefix": "ret",
		"body": ["return $0"],
		"description": "return value"
	},
	"assigment": {
		"prefix": "ll",
		"body": ["local ${1:varName} = ${2:value}"],
		"description": "create a variable"
	},
	"locreq": {
		"prefix": "lreq",
		"body": ["local ${1:var} = require('${2:module}')$0"],
		"description": "Require module as a variable"
	},
	"if": {
		"prefix": "if",
		"body": ["if ${1:true} then", "\t$0", "end"]
	},
	"elseif": {
		"prefix": "elseif",
		"body": ["elseif ${1:true} then", "\t$0"]
	},
	"for": {
		"prefix": "for",
		"body": ["for ${1:i} = ${2:1}, ${3:10} do", "\t$0", "end"],
		"description": "for loop range"
	},
	"forline": {
		"prefix": "forline",
		"body": [
			"f = io.open(${1:'${2:filename}'}, '${3:r}')\n",
			"while true do",
			"\tline = f:read()",
			"\tif line == nil then break end\n",
			"\t${0:-- code}",
			"end"
		],
		"description": "read file line by line"
	},
	"function": {
		"prefix": "fun",
		"body": ["function $1($2)", "\t$0", "end"]
	},
	"inline-function": {
		"prefix": "fu=",
		"body": ["local ${1:name} = function($2)", "\t${0:-- code}", "end"]
	},
	"print": {
		"prefix": "p",
		"body": ["print(${0})"]
	},
	"self": {
		"prefix": "self:",
		"body": ["function self:${1:methodName}($2)", "\t$0", "end"]
	},
	"while": {
		"prefix": "wh",
		"body": ["while ${1:true} do", "\t$0", "end"]
	},
	"surround-function": {
		"prefix": "sfun",
		"body": ["$1function($2)", "\t$TM_SELECTED_TEXT", "end"]
	},
	"surround-ktime": {
		"prefix": "skt",
		"body": ["local ${1:rt} = ktime()", "$TM_SELECTED_TEXT", "${0:info}(ktime() - $1)"]
	}
}
